[project]
name = "review-crew"
version = "0.1.0"
description = "Multi-agent content review system using Strands Agents"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
dependencies = [
    "strands-agents[ollama]>=0.1.0",
    "pyyaml>=6.0",
    "click>=8.0.0",
    "openai>=1.0.0", # For LM Studio OpenAI-compatible API support
    "python-dotenv>=1.0.0", # For .env file support
    "tiktoken>=0.7.0", # For accurate token counting and context management
    "types-pyyaml>=6.0.12.20250822",
]
requires-python = ">=3.10"

readme = "README.md"
license = {text = "MIT"}

[project.optional-dependencies]
lm-studio = [
    "openai>=1.0.0",  # For LM Studio support
]
ollama = [
    "ollama>=0.1.0",  # For Ollama support (if available)
]

[project.scripts]
review-crew = "src.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.ruff]
# Same line length as your existing Black config
line-length = 88
target-version = "py310"

# Exclude the same directories as your current flake8 config
exclude = [
    ".git",
    "__pycache__",
    ".venv", 
    ".pytest_cache",
    "*.egg-info",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
# Plus additional useful rule categories
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings  
    "F",   # Pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501", # line too long (handled by formatter)  
    "E722", # bare except - consider removing this to enforce proper exception handling
    "F401", # imported but unused
    "F811", # redefined while unused
]

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"
# Indent with spaces, not tabs
indent-style = "space"
# Like Black, respect magic trailing commas
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending
line-ending = "auto"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0", 
    "pytest-asyncio>=0.21.0",
    "ruff>=0.7.0",
    "mypy>=1.0.0",
    "grip>=4.6.2",
]
